{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport * as WebBrowser from 'expo-web-browser';\nimport Constants from 'expo-constants';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport var Web = function Web() {\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      result = _useState2[0],\n      setResult = _useState2[1];\n\n  var _handlePressButtonAsync = function () {\n    var _ref = _asyncToGenerator(function* () {\n      var result = yield WebBrowser.openBrowserAsync('https://expo.dev');\n      setResult(result);\n    });\n\n    return function _handlePressButtonAsync() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Button, {\n      title: \"Open WebBrowser\",\n      onPress: _handlePressButtonAsync\n    }), _jsx(Text, {\n      children: result && JSON.stringify(result)\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    paddingTop: Constants.statusBarHeight,\n    backgroundColor: '#ecf0f1'\n  }\n});","map":{"version":3,"names":["WebBrowser","Constants","Web","useState","result","setResult","_handlePressButtonAsync","openBrowserAsync","styles","container","JSON","stringify","StyleSheet","create","flex","alignItems","justifyContent","paddingTop","statusBarHeight","backgroundColor"],"sources":["E:/ITI files/iti files/react native/day3/task3/AwesomeProject/WebBrowser.jsx"],"sourcesContent":["import { Button, Text, View, StyleSheet } from 'react-native';\r\nimport * as WebBrowser from 'expo-web-browser';\r\nimport Constants from 'expo-constants';\r\n\r\nexport const Web =()=> {\r\n  const [result, setResult] = useState(null);\r\n\r\n  const _handlePressButtonAsync = async () => {\r\n    let result = await WebBrowser.openBrowserAsync('https://expo.dev');\r\n    setResult(result);\r\n  };\r\n  return (\r\n    <View style={styles.container}>\r\n      <Button title=\"Open WebBrowser\" onPress={_handlePressButtonAsync} />\r\n      <Text>{result && JSON.stringify(result)}</Text>\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    paddingTop: Constants.statusBarHeight,\r\n    backgroundColor: '#ecf0f1',\r\n  },\r\n});\r\n"],"mappings":";;;;;;AACA,OAAO,KAAKA,UAAZ,MAA4B,kBAA5B;AACA,OAAOC,SAAP,MAAsB,gBAAtB;;;AAEA,OAAO,IAAMC,GAAG,GAAE,SAALA,GAAK,GAAK;EACrB,gBAA4BC,QAAQ,CAAC,IAAD,CAApC;EAAA;EAAA,IAAOC,MAAP;EAAA,IAAeC,SAAf;;EAEA,IAAMC,uBAAuB;IAAA,6BAAG,aAAY;MAC1C,IAAIF,MAAM,SAASJ,UAAU,CAACO,gBAAX,CAA4B,kBAA5B,CAAnB;MACAF,SAAS,CAACD,MAAD,CAAT;IACD,CAH4B;;IAAA,gBAAvBE,uBAAuB;MAAA;IAAA;EAAA,GAA7B;;EAIA,OACE,MAAC,IAAD;IAAM,KAAK,EAAEE,MAAM,CAACC,SAApB;IAAA,WACE,KAAC,MAAD;MAAQ,KAAK,EAAC,iBAAd;MAAgC,OAAO,EAAEH;IAAzC,EADF,EAEE,KAAC,IAAD;MAAA,UAAOF,MAAM,IAAIM,IAAI,CAACC,SAAL,CAAeP,MAAf;IAAjB,EAFF;EAAA,EADF;AAMD,CAbM;AAeP,IAAMI,MAAM,GAAGI,UAAU,CAACC,MAAX,CAAkB;EAC/BJ,SAAS,EAAE;IACTK,IAAI,EAAE,CADG;IAETC,UAAU,EAAE,QAFH;IAGTC,cAAc,EAAE,QAHP;IAITC,UAAU,EAAEhB,SAAS,CAACiB,eAJb;IAKTC,eAAe,EAAE;EALR;AADoB,CAAlB,CAAf"},"metadata":{},"sourceType":"module"}